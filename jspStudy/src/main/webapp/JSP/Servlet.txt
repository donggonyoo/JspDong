	== Servlet == 
실행순서
1. 첫번째요청
	(1) 서블릿의 객체화 , 생성자호출
	(2) init() 호출됨
		-GET 요청 : doGet() 호출
		-POST 요청 : doPost() 호출
2.두번쨰 요청
	(1) Service() 호출
		-GET 요청 : doGet() 호출
		-POST 요청 : doPost() 호출
GET 방식 : 기본 method방식
POST 방식 : <form method="post"...>요청

	=== JSP ===
1.기본구성요소
(1) 지시어(Directive) <%@ 종류속성=.. %>
	-page : JSP 페이지의 특징 설정
		contentType: mime형태 문서종류설정(인코딩방식)
		 import : jsp페이지에서 사용되는 클래스의 패키지 등록
		 isErrorPage : 현재페이지가 오류페이지 (기본값:false)
		 
	-include : 다른페이지를포함시킬떄 사용
		<%@ include file="포함시킬페이지명"%>
		2개의 jsp페이지가 하나의 서블릿으로생성(변수공유가능)
	-taglib : 커스텀태그 사용시 설정
	
(2)스크립트(Script) 자바소스의 영역
	- 스크립트릿 <%... %> : _jspService() 메서드에 자바소스로생성 
	-표현식 <%=.. %> : 값을 웹화면에출력
			값이 존재 : 변수, 상수 , 리터널 ,리턴값 있는 함수\
	-선언문 <%!.. %> : 서블릿의 멤버로생성됨(거의사용안함)
(3) 주석문(comment) : 
- jsp 주석 : <%-- --%> : jsp가 servelt으로생성시 주석으로 됨
						(서블릿에 보여지지않음)
-java 주석 : 스크립트영역에서만 사용 가능함
			서블릿이 컴파일시 주석처리됨(실행되지않는영역)
			생성된 서블릿에 보인다
-HTML 주석<!-- --> : 브라우저에서 주석으로처리됨(브라우저의소스보기에 보임)
					jsp나 서블릿에서는 주석으로 인식하지않는다				

=========================================================
jsp 에서 제공되는 내장객체 (8+1)
1.request : 요청객체(브라우저에서 전달되는 요청정보 저장)
2.response : 응답객체(브라우저로 전달하는 정보 저장)
3.pageContext : 현재페이지의 정보저장하고있는 객체
4.session : 브라우저의 상태정보를 저장할수있는 객체
5.applcation : 웹 어플리케이션(프로젝트)정보 저장 객체
6.out : response 객체의 출력버퍼가 목적지인 스트림객체
7.config : 서블릿 환경변수를 저장하는 객체
8.page : 서블릿 객체  this와 같은 객체(자주사용 X)

9. exception : 예외객체 #(error 페이지에서만 제공되는 객체)

==================================================================

영역개념
	page영역 : 한개의 jsp페이지가 하나의 page영역임  => pageContext 객체를 공유함
	(includeDirective의 경우 페이지2개가 하나의 page영역일수도 있음)
	
	request 영역 : 한번의 요청에서 응답까지의 실행 영역 => request객체 공유
	
	session 영역 : 하나의 브라우저에서 실행되는 모든페이지의 영역 ==>session 객체공유
	
	application 영역 : 하나의 프로젝트의 모든JSP페이지는 같은영역 => application객체공유
	
	영역담당 객체 : pageContext , requset , session , application
	=> 속성등록(setAttirbute) 
		 조회(getAttirbute)
		 삭제기능(remvoeAttribute)
	
	
	
	


		